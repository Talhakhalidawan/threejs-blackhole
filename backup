     //Fragment Shader for reflection
     uniform float delta;
      uniform samplerCube cubeMap;
      varying vec3 vnormal;
      varying vec3 veyedir;

      void main() {
        vec3 fvNormal = normalize(vnormal);
        vec3 fvEyeDir = normalize(veyedir);
        
        float refractiveIndex = 1.5;
        vec3 refractedDirection = refract(fvEyeDir,fvNormal, 1.0 / refractiveIndex);
        //vec3 reflectedDirection = normalize(refract(fvEyeDir, fvNormal));
        //textureCube(cubeMap, refractedDirection);
        gl_FragColor = vec4(1.0,0,0,1.0)
      }
      
      //